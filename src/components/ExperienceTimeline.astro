---
import { getCollection } from 'astro:content';

const timelineEntries = await Promise.all(
  (await getCollection('timeline'))
    .sort((a, b) => a.data.order - b.data.order)
    .map(async (entry) => ({
      ...entry,
      Content: (await entry.render()).Content,
    }))
);
---

<section id="experience" class="relative py-20 bg-gradient-to-br from-slate-900 via-blue-900 to-purple-900 dark:from-gray-900 dark:via-blue-950 dark:to-purple-950 overflow-hidden transition-colors duration-300">
  <!-- Subtle animated background -->
  <div class="absolute inset-0 opacity-5 dark:opacity-10">
    <svg class="w-full h-full" xmlns="http://www.w3.org/2000/svg">
      <defs>
        <pattern id="timeline-pattern" width="80" height="80" patternUnits="userSpaceOnUse">
          <circle cx="40" cy="40" r="1" fill="rgba(147,51,234,0.3)"/>
          <circle cx="0" cy="0" r="1" fill="rgba(59,130,246,0.3)"/>
          <circle cx="80" cy="80" r="1" fill="rgba(236,72,153,0.3)"/>
        </pattern>
      </defs>
      <rect width="100%" height="100%" fill="url(#timeline-pattern)"/>
    </svg>
  </div>
  
  <!-- Floating accent shapes -->
  <div class="absolute top-20 right-10 w-72 h-72 bg-blue-300/10 dark:bg-blue-500/5 rounded-full blur-3xl"></div>
  <div class="absolute bottom-20 left-10 w-72 h-72 bg-purple-300/10 dark:bg-purple-500/5 rounded-full blur-3xl"></div>
  
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
    <div class="text-center mb-16">
      <h2 class="font-heading font-bold text-4xl md:text-5xl text-white dark:text-white mb-4">My Journey</h2>
      <div class="w-24 h-2 bg-gradient-to-r from-cyan-400 to-blue-400 mx-auto rounded-full shadow-lg"></div>
    </div>
    
    <div class="relative">
      <!-- Enhanced Timeline line with gradient -->
      <div class="hidden md:block absolute left-1/2 transform -translate-x-1/2 w-1 h-full bg-gradient-to-b from-blue-400 via-purple-400 to-indigo-400 dark:from-blue-500 dark:via-purple-500 dark:to-indigo-500 rounded-full shadow-lg"></div>
      
      {timelineEntries.map((entry, index) => {
        const isEven = index % 2 === 0;
        const isWork = entry.data.type === 'work';
        
        return (
          <div class={`relative mb-12 md:mb-20 ${isEven ? 'md:pr-1/2' : 'md:pl-1/2'}`}>
            <!-- Timeline dot with gradient -->
            <div class="hidden md:block absolute left-1/2 transform -translate-x-1/2 -translate-y-4">
              <div class={`w-5 h-5 rounded-full ${isWork ? 'bg-gradient-to-br from-blue-500 to-purple-500' : 'bg-gradient-to-br from-purple-500 to-indigo-500'} border-4 border-white dark:border-gray-800 shadow-xl animate-pulse`} style="animation-duration: 2s;"></div>
              <div class={`absolute inset-0 w-5 h-5 rounded-full ${isWork ? 'bg-blue-400' : 'bg-indigo-400'} opacity-50 blur-sm`}></div>
            </div>
            
            <div class={`md:w-5/12 ${isEven ? 'ml-auto' : ''}`}>
              <div class="group relative">
                <!-- Gradient glow on hover -->
                <div class={`absolute -inset-0.5 bg-gradient-to-r ${isWork ? 'from-blue-400 to-purple-400' : 'from-purple-400 to-indigo-400'} rounded-2xl opacity-0 group-hover:opacity-100 blur transition-all duration-500`}></div>
                
                <div class="relative bg-white dark:bg-gray-900 rounded-2xl shadow-lg hover:shadow-2xl transition-all transform hover:-translate-y-1 overflow-hidden">
                  <!-- Header Section with Logo, Title, and Badge -->
                  <div class={`px-6 pt-6 pb-4 bg-gradient-to-br ${isWork ? 'from-blue-50 to-purple-50 dark:from-blue-950/30 dark:to-purple-950/30' : 'from-purple-50 to-indigo-50 dark:from-purple-950/30 dark:to-indigo-950/30'}`}>
                    <div class="flex items-start justify-between gap-4 mb-3">
                      <div class="flex items-center gap-4 flex-1 min-w-0">
                        <div class="w-16 h-16 rounded-lg bg-white dark:bg-gray-800 p-2 flex items-center justify-center shadow-md flex-shrink-0">
                          <img src={entry.data.logo} alt={entry.data.organization} class="w-full h-full object-contain" />
                        </div>
                        <div class="flex-1 min-w-0">
                          <h3 class="font-heading font-bold text-xl text-gray-900 dark:text-white mb-1">{entry.data.title}</h3>
                          <p class="text-primary-600 dark:text-primary-400 font-semibold text-lg">{entry.data.organization}</p>
                        </div>
                      </div>
                      <div class={`px-3 py-1.5 text-xs font-bold rounded-full flex items-center gap-1.5 shadow-sm flex-shrink-0 ${
                        isWork ? 'bg-blue-100 text-blue-700 dark:bg-blue-900/50 dark:text-blue-300' : 'bg-purple-100 text-purple-700 dark:bg-purple-900/50 dark:text-purple-300'
                      }`}>
                        <span class="text-base">{isWork ? 'ðŸ’¼' : 'ðŸŽ“'}</span>
                        <span>{isWork ? 'EXPERIENCE' : 'DEGREE'}</span>
                      </div>
                    </div>
                    
                    <div class="flex flex-wrap gap-3 text-sm text-gray-600 dark:text-gray-400">
                      <div class="flex items-center gap-1.5 font-medium">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                        </svg>
                        <span>{entry.data.startDate} - {entry.data.endDate || 'Present'}</span>
                      </div>
                      {entry.data.location && (
                        <div class="flex items-center gap-1.5 text-red-600 dark:text-red-400">
                          <svg class="w-4 h-4 fill-current" viewBox="0 0 24 24">
                            <path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"/>
                          </svg>
                          <span>{entry.data.location}</span>
                        </div>
                      )}
                    </div>
                  </div>
                  
                  <!-- Content Section -->
                  <div class="px-6 py-5">
                    <style>
                      .experience-content h2 {
                        margin-top: 2rem !important;
                        margin-bottom: 1rem !important;
                        font-weight: 800 !important;
                        font-size: 1.1rem !important;
                        display: block !important;
                      }
                      /* Remove gradient from h2, we'll use JavaScript to wrap text only */
                      .experience-content h2 {
                        color: #1e40af !important;
                      }
                      .experience-content ul {
                        list-style-type: disc !important;
                        padding-left: 1.5rem !important;
                        margin-top: 1rem !important;
                        margin-bottom: 1rem !important;
                      }
                      .experience-content li {
                        padding-left: 0.125rem !important;
                        margin-bottom: 0.75rem !important;
                      }
                      .experience-content li::marker {
                        color: #6366f1;
                        font-size: 1.1em;
                      }
                      /* Style for gradient text spans that will be added via JS */
                      .experience-content h2 .gradient-text {
                        background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
                        -webkit-background-clip: text;
                        -webkit-text-fill-color: transparent;
                        background-clip: text;
                        font-weight: 800;
                      }
                      .experience-content h2 .emoji {
                        font-size: 1.3em;
                        margin-right: 0.5rem;
                        display: inline-block;
                      }
                    </style>
                    <script>
                      // Wrap text in gradient span, keep emoji separate
                      document.addEventListener('DOMContentLoaded', () => {
                        document.querySelectorAll('.experience-content h2').forEach(h2 => {
                          const text = h2.textContent;
                          // Match emoji at start (target common emojis)
                          const emojiMatch = text.match(/^([\u{1F300}-\u{1F9FF}][\u{FE00}-\u{FE0F}]?|[\u{2600}-\u{26FF}][\u{FE00}-\u{FE0F}]?)\s*/u);
                          if (emojiMatch) {
                            const emoji = emojiMatch[0].trim();
                            const restText = text.slice(emojiMatch[0].length).trim();
                            h2.innerHTML = `<span class="emoji">${emoji}</span> <span class="gradient-text">${restText}</span>`;
                          }
                        });
                      });
                    </script>
                    <div class="experience-content text-gray-700 dark:text-gray-300 prose prose-sm dark:prose-invert max-w-none
                      prose-headings:flex prose-headings:items-center prose-headings:gap-2 prose-headings:border-b prose-headings:border-gray-200 prose-headings:dark:border-gray-700 prose-headings:pb-2
                      prose-p:my-4 prose-p:leading-relaxed prose-p:text-[15px]
                      prose-strong:text-primary-600 prose-strong:dark:text-primary-400 prose-strong:font-bold">
                      <entry.Content />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        );
      })}
    </div>
  </div>
</section>
